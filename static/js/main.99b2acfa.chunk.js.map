{"version":3,"sources":["utils/sort.js","Table.js","utils/api.js","App.js","index.js"],"names":["dynamicSort","property","sortOrder","substr","a","b","Table","props","React","useState","items","setItems","sortCategory","setSortCategory","input","setInput","inputSelect","setInputSelect","categories","setCategories","currentPage","setCurrentPage","itemsPerPage","currentItems","setCurrentItems","useEffect","fetch","then","res","json","Object","keys","indexOfLastItem","indexOfFirstItem","slice","handleSearch","e","preventDefault","target","name","value","searchedItems","filter","elem","category","toString","toLowerCase","indexOf","length","forEach","searchedItem","item","index","id","splice","unshift","onSubmit","className","onChange","handleSelect","disabled","selected","map","onInput","search","onBlur","i","onClick","innerText","sort","handleClick","pageNumbers","Math","ceil","push","page","pageClickHandler","parseInt","pages","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.99b2acfa.chunk.js","sourcesContent":["export function dynamicSort(property) {\n  let sortOrder = 1;\n  if (property[0] === \"-\") {\n    sortOrder = -1;\n    property = property.substr(1);\n  }\n  return function (a, b) {\n    let result =\n      a[property] < b[property] ? -1 : a[property] > b[property] ? 1 : 0;\n    return result * sortOrder;\n  };\n}\n","import React from \"react\";\nimport { getItems } from \"./utils/api\";\nimport { dynamicSort } from \"./utils/sort\";\nimport \"./Table.css\";\n\nconst Table = (props) => {\n  const [items, setItems] = React.useState([]);\n  const [sortCategory, setSortCategory] = React.useState(\"\");\n  const [input, setInput] = React.useState({});\n  const [inputSelect, setInputSelect] = React.useState({});\n  const [categories, setCategories] = React.useState([]);\n  const [currentPage, setCurrentPage] = React.useState(1);\n  const [itemsPerPage, setItemsPerpage] = React.useState(5);\n  const [currentItems, setCurrentItems] = React.useState([]);\n\n  React.useEffect(() => {\n    getItems()\n      .then((res) => {\n        setItems(res);\n        return res;\n      })\n      .then((res) => setCategories(Object.keys(res[0])));\n  }, []);\n\n  React.useEffect(() => {\n    if (items) {\n      const indexOfLastItem = currentPage * itemsPerPage;\n      const indexOfFirstItem = indexOfLastItem - itemsPerPage;\n      setCurrentItems([...items.slice(indexOfFirstItem, indexOfLastItem)]);\n    }\n  }, [items, currentPage, itemsPerPage]);\n\n  const pageClickHandler = (e) => setCurrentPage(e.target.innerText);\n\n  const pages = () => {\n    const pageNumbers = [];\n    for (let i = 1; i <= Math.ceil(items.length / itemsPerPage); i++) {\n      pageNumbers.push(i);\n    }\n    return (\n      <ul className=\"page-numbers\">\n        {pageNumbers.map((page) => (\n          <li\n            onClick={(e) => pageClickHandler(e)}\n            className={\n              page === parseInt(currentPage)\n                ? \"page-numbers__page page-numbers__page_selected\"\n                : \"page-numbers__page\"\n            }\n          >\n            {page}\n          </li>\n        ))}\n      </ul>\n    );\n  };\n\n  const handleClick = (e) => {\n    if (e.target.innerText === sortCategory) {\n      setSortCategory(`-${e.target.innerText}`);\n      setCurrentItems([\n        ...currentItems.sort(dynamicSort(`-${e.target.innerText}`)),\n      ]);\n    } else {\n      setSortCategory(e.target.innerText);\n      setCurrentItems([...currentItems.sort(dynamicSort(e.target.innerText))]);\n    }\n  };\n\n  const handleSearch = (e) => {\n    e.preventDefault();\n    setInput({ ...input, [e.target.name]: e.target.value });\n    const searchedItems = currentItems.filter((elem) => {\n      return (\n        elem[inputSelect.category]\n          .toString()\n          .toLowerCase()\n          .indexOf(e.target.value) !== -1\n      );\n    });\n    if (searchedItems.length) {\n      searchedItems.forEach((searchedItem) => {\n        currentItems.forEach((item, index) => {\n          if (searchedItem.id === item.id) currentItems.splice(index, 1);\n        });\n      });\n\n      searchedItems.forEach((item) => currentItems.unshift(item));\n      setCurrentItems([...currentItems]);\n    }\n  };\n\n  const handleSelect = (e) =>\n    setInputSelect({ ...inputSelect, [e.target.name]: e.target.value });\n\n  return (\n    <>\n      <form onSubmit={(e) => handleSearch(e)} className=\"form-search\">\n        <caption>Search</caption>\n        <select\n          value={inputSelect.category}\n          onChange={(e) => handleSelect(e)}\n          name=\"category\"\n        >\n          <option disabled selected value>\n            -- select an option --\n          </option>\n          {categories.map((item) => (\n            <option value={item}>{item}</option>\n          ))}\n        </select>\n        <input\n          name=\"search\"\n          onInput={(e) => handleSearch(e)}\n          value={input.search}\n          onBlur={(e) => setInput({ ...input, [\"search\"]: \"\" })}\n        />\n      </form>\n      <table>\n        <tr>\n          {categories.map((category, i) => (\n            <td\n              onClick={(e) => handleClick(e)}\n              className=\"table__category\"\n              key={i}\n            >\n              {category}\n            </td>\n          ))}\n        </tr>\n\n        {currentItems.map((elem) => (\n          <tr>\n            {categories.map((category) => (\n              <td key={elem[category].id}>{elem[category]}</td>\n            ))}\n          </tr>\n        ))}\n      </table>\n      {pages()}\n    </>\n  );\n};\n\nexport default Table;\n","export const getItems = () => {\n  return fetch(\"https://fakestoreapi.com/products\").then((res) => res.json());\n};\n","import \"./App.css\";\nimport Table from \"./Table\";\n\nfunction App() {\n  return (\n    <>\n      <Table />\n    </>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}